image: maven:3-jdk-8-alpine

variables:
  MAVEN_CLI_OPTS: "-s .ci/settings.xml --batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .m2/repository/
    - target/

build:
  stage: build
  script:
    - mvn $MAVEN_CLI_OPTS -U clean compile

deploy_snapshot:
  stage: deploy
  environment: snapshot
  script:
    - mvn $MAVEN_CLI_OPTS deploy
  only:
    - master
  artifacts:
    paths:
      - target/*.jar

deploy_release:
  stage: deploy
  image: maven:3-jdk-8      # use stretch
  environment: release
  when: manual
  only:
    - master
  script:
    ##
    ## Install ssh-agent if not already installed, it is required by Docker.
    ## (change apt-get to yum if you use an RPM-based image)
    ##
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'

    ##
    ## Run ssh-agent (inside the build environment)
    ##
    - eval $(ssh-agent -s)

    ##
    ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    ## We're using tr to fix line endings which makes ed25519 keys work
    ## without extra base64 encoding.
    ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
    ##
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null

    ##
    ## Create the SSH directory and give it the right permissions
    ##
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

    ##
    ## set gpg key
    ##
    - echo "${GPG_PRIVATE_KEY}" | gpg --batch --import
    - gpg --list-keys

    ##
    ## configure git for version push
    ##
    - git config --global user.name ${SSH_USER_NAME}
    - git config --global user.email ${SSH_USER_EMAIL}
    - git checkout -f ${CI_COMMIT_REF_NAME}
    - git remote set-url origin git@gitlab.com:tinyMediaManager/${CI_PROJECT_NAME}.git

    ##
    ## perform the release
    ##
    - mvn $MAVEN_CLI_OPTS release:prepare release:perform -Dresume=false -DautoVersionSubmodules=true -DdryRun=false -Dmaven.test.skip=true -DskipITs -DscmCommentPrefix="[ci skip]"
